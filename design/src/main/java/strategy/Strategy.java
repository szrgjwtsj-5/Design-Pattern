package strategy;

/**
 * 在策略模式（Strategy Pattern）中，一个类的行为或其算法可以在运行时更改。这种类型的设计模式属于行为型模式。
 *
 * 在策略模式中，我们创建表示各种策略的对象和一个行为随着策略对象改变而改变的 context 对象。策略对象改变 context 对象的执行算法。<br/><br/>
 *
 * <b>意图：</b>定义一系列的算法,把它们一个个封装起来, 并且使它们可相互替换。<br/>
 *
 * <b>主要解决：</b>在有多种算法相似的情况下，使用 if...else 所带来的复杂和难以维护。<br/>
 *
 * <b>何时使用：</b>一个系统有许多许多类，而区分它们的只是他们直接的行为。<br/>
 *
 * <b>如何解决：</b>将这些算法封装成一个一个的类，任意地替换。<br/>
 */
public interface Strategy {
    int doOperation(int num1, int num2);
}
